{"version":3,"sources":["components/Navbar.tsx","App.tsx","utils/searchHelper.ts","PeopleContext.tsx","Pages/NotFoundPage.tsx","Pages/HomePage.tsx","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleItem/PeopleItem.tsx","components/PeopleList/PeopleList.tsx","components/PeopleTable.tsx","api.ts","Pages/PeoplePage.tsx","Root..tsx","index.tsx"],"names":["getLinckClass","isActive","classNames","Navbar","className","role","to","App","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleContext","React","createContext","persons","setPersons","sexFilter","setSexFilter","handleQueryChange","PeopleProvider","children","useState","useSearchParams","searchParams","setSearchParams","event","params","search","setSearchWith","query","target","useMemo","Provider","NotFoundPage","HomePage","SearchLink","props","queryCentury","PeopleFilters","useContext","sex","get","centuries","getAll","cn","includes","type","placeholder","onChange","map","century","filter","c","length","Loader","Sex","PersonLink","person","slug","name","PeopleItem","motherName","fatherName","born","died","personSlug","useParams","findPersonByName","find","p","mother","father","renderParentLink","parent","parentName","PeopleList","location","useLocation","trim","toLowerCase","PeopleTable","href","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","errorMessage","setErrorMessage","loading","setLoading","useEffect","getPeople","finally","catch","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.345261a0.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinckClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinckClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinckClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import React, { useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Person } from './types';\nimport { PeopleContextType } from './types/PeopleContextType';\nimport { SearchParams, getSearchWith } from './utils/searchHelper';\n\nexport const PeopleContext = React.createContext<PeopleContextType>({\n  persons: [],\n  setPersons: () => { },\n  sexFilter: 'all',\n  setSexFilter: () => { },\n  handleQueryChange: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [sexFilter, setSexFilter] = useState<string>('all');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n    searchParams.set('query', event.target.value);\n  }\n\n  const value = useMemo(() => ({\n    persons,\n    setPersons,\n    sexFilter,\n    setSexFilter,\n    handleQueryChange,\n  }), [persons, sexFilter]);\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  );\n};\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useContext } from 'react';\nimport cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleContext } from '../PeopleContext';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nconst queryCentury = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const { handleQueryChange } = useContext(PeopleContext);\n\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex') || 'all';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function clearFilters() {\n    return ({\n      centuries: null,\n      sex: null,\n      query: null,\n    });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          data-cy=\"century\"\n          className={cn({ 'is-active': sex.includes('all') })}\n          params={{\n            sex: 'all',\n          }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          data-cy=\"century\"\n          className={cn({ 'is-active': sex.includes('m') })}\n          params={{\n            sex: 'm',\n          }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          data-cy=\"century\"\n          className={cn({ 'is-active': sex.includes('f') })}\n          params={{\n            sex: 'f',\n          }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {queryCentury.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(`${century}`),\n                })}\n                params={{\n                  centuries: centuries.includes(`${century}`)\n                    ? centuries.filter(c => c !== century)\n                    : [...centuries, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n\n            <div className=\"level-right ml-4\">\n              <SearchLink\n                className={cn('button is-success', {\n                  'is-outlined': centuries.length,\n                })}\n                params={{\n                  search: getSearchWith(searchParams,\n                    { centuries: null }).toString(),\n                }}\n              >\n                All\n              </SearchLink>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={clearFilters()}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person | undefined;\n}\n\nconst Sex = {\n  M: 'm',\n  F: 'f',\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return null;\n  }\n\n  const { slug, name, sex } = person;\n\n  return (\n    <>\n      {sex === Sex.M ? (\n        <Link to={`/people/${slug}`}>\n          {name}\n        </Link>\n      ) : (\n        <Link\n          className=\"has-text-danger\"\n          to={`/people/${slug}`}\n        >\n          {name}\n        </Link>\n      )}\n    </>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { PeopleContext } from '../../PeopleContext';\n\ninterface Props {\n  person: Person\n}\n\nexport const PeopleItem: React.FC<Props> = ({ person }) => {\n  const {\n    motherName, sex, fatherName, slug, born, died,\n  } = person;\n\n  const { personSlug } = useParams();\n  const { persons } = useContext(PeopleContext);\n\n  const findPersonByName = useMemo(() => {\n    return (name: string): Person | undefined => {\n      return persons.find((p) => p.name === name);\n    };\n  }, [persons]);\n\n  const mother = useMemo(() => {\n    return findPersonByName(motherName ?? '');\n  }, [findPersonByName, motherName]);\n\n  const father = useMemo(() => {\n    return findPersonByName(fatherName ?? '');\n  }, [findPersonByName, fatherName]);\n\n  const renderParentLink = (parent: Person | undefined, parentName: string) => {\n    return parent ? <PersonLink person={parent} /> : parentName;\n  };\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>{motherName ? renderParentLink(mother, motherName) : '-'}</td>\n      <td>{fatherName ? renderParentLink(father, fatherName) : '-'}</td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PeopleContext } from '../../PeopleContext';\nimport { PeopleItem } from '../PeopleItem/PeopleItem';\n\nexport const PeopleList: React.FC = () => {\n  const { persons } = useContext(PeopleContext);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const sex = searchParams.get('sex');\n  const query = searchParams.get('query');\n\n  const filterByGender = () => {\n    if (sex === 'm') {\n      return persons.filter((person) => person.sex === 'm');\n    }\n\n    if (sex === 'f') {\n      return persons.filter((person) => person.sex === 'f');\n    }\n\n    return persons;\n  };\n\n  const filteredPeople = () => {\n    if (query?.trim()) {\n      return persons.filter((person) => {\n        return person.name.toLowerCase().includes(query.toLowerCase());\n      });\n    }\n\n    if (sex !== 'all') {\n      return filterByGender();\n    }\n\n    // if (sex && sex !== 'all' && query && query.trim()) {\n    //   return filterByGender().filter((person) => {\n    //     return person.name.toLowerCase().includes(query.toLowerCase());\n    //   });\n    // }\n\n    return persons;\n  };\n\n  return (\n    <tbody>\n      {filteredPeople().map((person) => (\n        <PeopleItem person={person} key={person.slug} />\n      ))}\n    </tbody>\n  );\n};\n","import { PeopleList } from './PeopleList';\n\nexport const PeopleTable = () => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <a href=\"#/people?sort=name\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <a href=\"#/people?sort=sex\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <a href=\"#/people?sort=born&amp;order=desc\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort-up\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <a href=\"#/people?sort=died\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <PeopleList />\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useContext, useEffect, useState } from 'react';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { PeopleContext } from '../PeopleContext';\n\nexport const PeoplePage = () => {\n  const { setPersons } = useContext(PeopleContext);\n\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(setPersons)\n      .finally(() => {\n        setLoading(false);\n        setErrorMessage('');\n      })\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      });\n  }, []);\n\n  return (\n    <>\n      {errorMessage}\n      <h1 className=\"title\">People Page</h1>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"block\">\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"table\n                  is-striped is-hoverable is-narrow is-fullwidth\"\n                >\n                  <PeopleTable />\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeopleProvider } from './PeopleContext';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <PeopleProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </PeopleProvider>\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root.';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}